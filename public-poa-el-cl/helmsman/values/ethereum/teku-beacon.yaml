image:
  repository: consensys/teku
  tag: latest
  pullPolicy: IfNotPresent

replicas: 1

p2pNodePort:
  enabled: true
  startAt: 31400

podManagementPolicy: Parallel

mode: "beacon"

extraArgs:
  - --initial-state=/data/testnet_spec/genesis.ssz
  - --network=/data/testnet_spec/config.yaml
  - --p2p-discovery-enabled
  - --p2p-discovery-bootnodes="$(cat /data/testnet_spec/bootstrap_nodes.txt)"
  - --eth1-endpoint=http://dshackle.ethereum.svc.cluster.local:8545/eth
  - --eth1-deposit-contract-address=$(cat /data/testnet_spec/deposit_contract.txt)
  - --logging=INFO
initContainers:
- name: init-genesis
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
  command:
    - sh
    - -ace
    - >
      mkdir -p /data/testnet_spec;
      if ! [ -f /data/testnet_spec/genesis.ssz ];
      then
        echo "waiting for genesis provider";
        while ! wget -T 5 -c http://genesis-generator:8001/cl/; do sleep 10; done;
        wget -O /data/testnet_spec/deposit_contract.txt http://genesis-generator:8001/cl/deposit_contract.txt;
        wget -O /data/testnet_spec/deploy_block.txt http://genesis-generator:8001/cl/deploy_block.txt;
        wget -O /data/testnet_spec/config.yaml http://genesis-generator:8001/cl/config.yaml;
        wget -O /data/testnet_spec/genesis.ssz http://genesis-generator:8001/cl/genesis.ssz;
        echo "genesis init done";
      else
        echo "genesis exists. skipping...";
      fi;
      echo "waiting for bootnode to be available";
      while ! wget -O /data/testnet_spec/bootstrap_nodes.txt http://lighthouse-bootnode-0.lighthouse-bootnode-headless.ethereum.svc.cluster.local:8888/enr;
      do
        sleep 10;
      done;
      echo "bootnode init done: $(cat /data/testnet_spec/bootstrap_nodes.txt)";
  volumeMounts:
    - name: storage
      mountPath: "/data"

#persistence:
#  enabled: true
#  size: 2Gi

resources: {}

serviceMonitor:
  enabled: true
