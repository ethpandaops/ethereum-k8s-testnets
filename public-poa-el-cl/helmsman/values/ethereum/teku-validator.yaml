image:
  repository: consensys/teku
  tag: latest
  pullPolicy: IfNotPresent

replicas: 1

podManagementPolicy: Parallel

mode: validator

extraArgs:
  - "--beacon-node-api-endpoint=\"\
    http://teku-beacon-$(echo $(hostname)| rev | cut -d'-' -f 1 | rev).teku-beacon-headless.ethereum.svc.cluster.local:5051\
    \""
  - --network=/data/testnet_spec/config.yaml
  - --validators-graffiti=$(hostname | cut -c -32)
  - --validator-keys=/data/validator/keys:/data/validator/secrets

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

serviceMonitor:
  enabled: true

initContainers:
# Important: Keep the init-keys container as the first element of the list
#            due to the usage of -set initContainers[0].env[0].value=...
- name: init-keys
  image: skylenet/ethereum-genesis-generator:latest@sha256:b9e330d38c4132d3ec460d85b9da429e5549b2260112ea95384cc91feb06d076
  imagePullPolicy: IfNotPresent
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
  command:
    - bash
    - -ace
    - >
      if [ -n "$(ls -A /data/validator/keys 2>/dev/null)" ];
      then
        echo "keys already exist. skipping...";
        exit 0;
      fi;
      INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      RANGE="NODE_${INDEX}_KEY_RANGE";
      S_MIN=$(echo ${!RANGE} | cut -d ':' -f1 );
      S_MAX=$(echo ${!RANGE} | cut -d ':' -f2 );
      mkdir -p /data/validator/keys /data/validator/secrets;
      echo "generating keys for node $INDEX. range $S_MIN to $S_MAX";
      eth2-val-tools keystores --source-mnemonic="$MNEMONIC" --source-min=$S_MIN --source-max=$S_MAX --prysm-pass Pass123word --insecure --out-loc assigned_data;
      mv assigned_data/teku-keys/* /data/validator/keys/;
      mv assigned_data/teku-secrets/* /data/validator/secrets/;
      echo "finished generating and importing keys";
  volumeMounts:
    - name: storage
      mountPath: "/data"
  env:
    # Important: Keep "MNEMONIC" as the first env var.
    #            due to the usage of -set initContainers[0].env[0].value=...
    - name: MNEMONIC
      value: ""
    - name: NODE_0_KEY_RANGE
      value: "96000:100000"

- name: init-genesis
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
  command:
    - sh
    - -ace
    - >
      mkdir -p /data/testnet_spec;
      if ! [ -f /data/testnet_spec/genesis.ssz ];
      then
        echo "waiting for genesis provider";
        while ! wget -T 5 -c http://genesis-generator:8001/cl/; do sleep 10; done;
        wget -O /data/testnet_spec/deposit_contract.txt http://genesis-generator:8001/cl/deposit_contract.txt;
        wget -O /data/testnet_spec/deploy_block.txt http://genesis-generator:8001/cl/deploy_block.txt;
        wget -O /data/testnet_spec/config.yaml http://genesis-generator:8001/cl/config.yaml;
        wget -O /data/testnet_spec/genesis.ssz http://genesis-generator:8001/cl/genesis.ssz;
        echo "genesis init done";
      else
        echo "genesis exists. skipping...";
      fi;
      echo "waiting for bootnode to be available";
      while ! wget -O /data/testnet_spec/bootstrap_nodes.txt http://lighthouse-bootnode-0.lighthouse-bootnode-headless.ethereum.svc.cluster.local:8888/enr;
      do
        sleep 10;
      done;
      echo "bootnode init done: $(cat /data/testnet_spec/bootstrap_nodes.txt)";
  volumeMounts:
    - name: storage
      mountPath: "/data"

- name: init-beacon-wait
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
  command:
    - sh
    - -ace
    - >
      HEALTH_API="http://teku-beacon-$(echo $(hostname)| rev | cut -d'-' -f 1 | rev).teku-beacon-headless.ethereum.svc.cluster.local:5051/eth/v1/node/health";
      echo "waiting for beacon node to be available on $HEALTH_API";
      while ! wget $HEALTH_API; do sleep 10; done;
      echo "beacon node is available"

#persistence:
#  enabled: true
#  accessModes:
#  - ReadWriteOnce
#  size: 1Gi
#  storageClassName: do-block-storage

serviceMonitor:
  enabled: true
