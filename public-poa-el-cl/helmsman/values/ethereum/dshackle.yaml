image:
  repository: skylenet/dshackle
  tag: "0.11@sha256:bfbc5e3e1f350c4d874af606b4dbc99f0c3c39ad7981ab7b1e597c6249e0dac8"
  pullPolicy: IfNotPresent

replicas: 3

extraEnvs:
  - name: configPath
    value: /config-update/upstreams.yaml

config: |
  version: v1
  port: 2449
  tls:
    enabled: false

  proxy:
    host: 0.0.0.0
    port: 8545
    routes:
      - id: eth
        blockchain: ethereum

  cluster:
    include:
      - "/config-update/upstreams.yaml"

  monitoring:
    enabled: true
    jvm: false
    extended: false
    prometheus:
      enabled: true
      bind: 0.0.0.0
      port: 8081
      path: /metrics

  health:
    port: 8082
    host: 0.0.0.0
    path: /health
    blockchains:
      - chain: ethereum
        min-available: 1

  cache:
    redis:
      enabled: true
      host: dshackle-redis-master
      port: 6379
      db: 0
      password: ${REDIS_PASSWORD}

extraVolumes:
  - name: config-update
    emptyDir: {}

extraVolumeMounts:
  - name: config-update
    mountPath: "/config-update"

initContainers:
- name: init-config
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
  env:
  command:
  - sh
  - -ace
  - >
    echo "waiting for genesis provider";
    while ! wget -T 5 -c http://genesis-generator:8000/el/; do sleep 10; done;
    wget -O genesis.json http://genesis-generator:8000/el/geth.json;
    apk update && apk add jq;
    CHAIN_ID=$(cat genesis.json | jq -r '.config.chainId');
    echo "got CHAIN_ID=$CHAIN_ID";
    echo "upstreams:" > /config-update/upstreams.yaml;
    for i in $(seq 0 4); do
      echo "
      - id: geth-$i
        chain: ethereum
        methods:
          enabled:
            - name: eth_getLogs
            - name: eth_chainId
              static: '$(printf "0x%x\n" ${CHAIN_ID})'
            - name: net_version
              static: "\"\\\"${CHAIN_ID}\\\"\""
        connection:
          ethereum:
            rpc:
              url: http://geth-$i:8545
            ws:
              url: ws://geth-$i:8546
      " >> /config-update/upstreams.yaml;
    done;
    echo "generated upstreams.yaml:";
    cat /config-update/upstreams.yaml;
  volumeMounts:
    - name: config-update
      mountPath: /config-update

- name: init-redis-wait
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
  command:
    - sh
    - -ace
    - >
      echo "waiting for redis";
      while ! nc -z dshackle-redis-master 6379; do sleep 5; done;
      echo "redis is online";

serviceMonitor:
  enabled: true

redis:
  enabled: true
  master:
    persistence:
      enabled: false
  replica:
    replicaCount: 0
    persistence:
      enabled: false
